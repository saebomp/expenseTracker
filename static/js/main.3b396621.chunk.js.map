{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeChart.js","components/ChartI.js","components/ExpenseChart.js","components/ChartE.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","id","payload","initialState","text","amount","localStorage","setItem","JSON","stringify","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","amounts","useContext","map","console","log","total","reduce","acc","item","toFixed","displayType","thousandSeparator","prefix","PieChart","props","data","ref","useRef","createPie","d3","d","sort","createArc","innerRadius","outerRadius","colors","useEffect","groupWithData","current","selectAll","exit","remove","groupWithUpdate","enter","append","attr","merge","select","i","centroid","style","width","height","transform","ChartI","useState","IncomeChart","ExpenseChart","Math","abs","ChartE","IncomeExpenses","modal","setModal","modal2","setModal2","income","expense","onClick","Transaction","sign","TransactionList","AddTransaction","setText","setAmount","onSubmit","e","preventDefault","length","newTransaction","floor","random","htmlFor","onChange","target","placeholder","replace","onFocus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEaA,G,OAAS,WACpB,OACE,oBAAIC,UAAU,0DAAd,+B,uBCJW,WAACC,EAAOC,GACrB,OAAOA,EAAOC,MAIZ,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,aAAaH,EAAMG,aAAaC,QAAO,SAAAD,GAAY,OAAIA,EAAaE,KAAOJ,EAAOK,aAEtF,IAAK,kBACL,OAAO,2BACFN,GADL,IAEEG,aAAa,CAACF,EAAOK,SAAT,mBAAqBN,EAAMG,iBAEzC,QACE,OAAOH,ICZPO,EAAe,CACnBJ,aAAc,CACZ,CAACE,GAAG,EAAGG,KAAK,SAAUC,QAAQ,KAC9B,CAACJ,GAAG,EAAGG,KAAK,SAAUC,OAAO,MAC7B,CAACJ,GAAG,EAAGG,KAAK,QAASC,QAAQ,KAC7B,CAACJ,GAAG,EAAGG,KAAK,SAAUC,OAAO,IAC7B,CAACJ,GAAG,EAAGG,KAAK,SAAUC,QAAQ,KAC9B,CAACJ,GAAG,EAAGG,KAAK,QAASC,QAAQ,OAIjCC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUN,IAG7C,IAAMO,EAAgBC,wBAAcR,GAI9BS,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAElBC,qBAAWC,EAAYZ,GAFL,mBAErCP,EAFqC,KAE9BoB,EAF8B,KAuB5C,OAAQ,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CACrCnB,aAAaH,EAAMG,aACnBoB,kBAjBF,SAA2BlB,GACzBe,EAAS,CACPlB,KAAK,qBACLI,QAAQD,KAeVmB,eAVF,SAAwBC,GACtBL,EAAS,CACPlB,KAAK,kBACLI,QAAQmB,MAIJ,SAKLR,K,OC9CQS,EAAU,WAAO,IAGtBC,EAFiBC,qBAAWd,GAA3BX,aAEsB0B,KAAI,SAAA1B,GAAY,OAAIA,EAAaM,UAC9DqB,QAAQC,IAAI,UAAWJ,GACvB,IAAMK,EAAQL,EAAQM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAGtE,OACE,qBAAKrC,UAAU,QAAf,SACE,sBAAKA,UAAU,eAAf,UACE,8BACE,oBAAIA,UAAU,+BAAd,4BAIF,8BACE,oBAAIA,UAAU,yBAAd,SACE,cAAC,IAAD,CAAcuB,MAAOU,EAAOK,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,gB,OCwE/EC,EA3FE,SAAAC,GACf,IACIT,EADYS,EAAMC,KAAKtC,QAAO,SAAAD,GAAY,OAAIA,EAAaM,OAAS,KAAGoB,KAAI,SAAAM,GAAI,OAAIA,EAAK1B,UACxEwB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAEnDQ,EAAMC,iBAAO,MACbC,EAAYC,MAEfxB,OAAM,SAAAyB,GACL,GAAGA,EAAEtC,OAAS,EACd,OAAOsC,EAAEtC,UAGVuC,KAAK,MACFC,EAAYH,MAEfI,YAAYT,EAAMS,aAClBC,YAAYV,EAAMU,aACfC,EAASN,IAAgBA,KAgE/B,OA7DAO,qBACE,WACE,IAAMX,EAAOG,EAAUJ,EAAMC,MAEvBY,EADQR,IAAUH,EAAIY,SACAC,UAAU,SAASd,KAAKA,GAEpDY,EAAcG,OAAOC,SAErB,IAAMC,EAAkBL,EACrBM,QACAC,OAAO,KACPC,KAAK,QAAS,OAEJH,EACVE,OAAO,QACPE,MAAMT,EAAcU,OAAO,aAG3BF,KAAK,QAAS,OACdA,KAAK,IAAKb,GACVa,KAAK,QAAQ,SAACf,EAAGkB,GAAJ,OAAUb,EAAOa,MAEpBN,EACVE,OAAO,QACPE,MAAMT,EAAcU,OAAO,SAG3BF,KAAK,cAAe,UACpBA,KAAK,qBAAsB,UAC3BA,KAAK,IAAK,KACVA,KAAK,IAAK,KACVA,KAAK,aAAa,SAAAf,GAAC,0BAAiBE,EAAUiB,SAASnB,GAApC,QACnBoB,MAAM,OAAQ,SACdA,MAAM,YAAa,IACnB3D,MAAK,SAAAuC,GACJ,GAAGA,EAAEzB,MAAQ,EACb,OAAOyB,EAAEL,KAAKlC,QAIJmD,EACXE,OAAO,QACPE,MAAMT,EAAcU,OAAO,UAG3BF,KAAK,cAAe,UACpBA,KAAK,qBAAsB,UAC3BA,KAAK,IAAK,KACVA,KAAK,IAAK,MACVA,KAAK,aAAa,SAAAf,GAAC,0BAAiBE,EAAUiB,SAASnB,GAApC,QACnBoB,MAAM,OAAQ,SACdA,MAAM,YAAa,IACnB3D,MAAK,SAAAuC,GACJ,GAAGA,EAAEzB,MAAQ,EACX,OAAmB,IAAVyB,EAAEzB,MAAeU,GAAOI,QAAQ,GAAK,UAItD,CAACK,EAAMC,OAIP,qBAAK0B,MAAO3B,EAAM2B,MAAOC,OAAQ5B,EAAM4B,OAAvC,SACE,mBACE1B,IAAKA,EACL2B,UAAS,oBAAe7B,EAAMU,YAArB,YAAoCV,EAAMU,YAA1C,UCpFJoB,EAAS,WAAO,IACpBpE,EAAgByB,qBAAWd,GAA3BX,aADmB,EAGFqE,mBAASrE,GAHP,mBAGnBuC,EAHmB,UAQ1B,OACE,cAAC+B,EAAD,CACE/B,KAAMA,EACN0B,MAAO,IACPC,OAAQ,IACRnB,YAAa,IACbC,YAAa,OC+EJuB,EA7FM,SAAAjC,GACnB,IACIT,EADYS,EAAMC,KAAKtC,QAAO,SAAAD,GAAY,OAAIA,EAAaM,OAAS,KAAGoB,KAAI,SAAAM,GAAI,OAAIA,EAAK1B,UACxEwB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAGnDQ,EAAMC,iBAAO,MACbC,EAAYC,MAEjBxB,OAAM,SAAAyB,GACL,GAAGA,EAAEtC,OAAS,EACZ,OAAOkE,KAAKC,IAAI7B,EAAEtC,WAInBuC,KAAK,MACFC,EAAYH,MAEfI,YAAYT,EAAMS,aAClBC,YAAYV,EAAMU,aACfC,EAASN,IAAgBA,KAgE/B,OA7DAO,qBACE,WACE,IAAMX,EAAOG,EAAUJ,EAAMC,MAEvBY,EADQR,IAAUH,EAAIY,SACAC,UAAU,SAASd,KAAKA,GAEpDY,EAAcG,OAAOC,SAErB,IAAMC,EAAkBL,EACrBM,QACAC,OAAO,KACPC,KAAK,QAAS,OAEJH,EACVE,OAAO,QACPE,MAAMT,EAAcU,OAAO,aAG3BF,KAAK,QAAS,OACdA,KAAK,IAAKb,GACVa,KAAK,QAAQ,SAACf,EAAGkB,GAAJ,OAAUb,EAAOa,MAEpBN,EACVE,OAAO,QACPE,MAAMT,EAAcU,OAAO,SAG3BF,KAAK,cAAe,UACpBA,KAAK,qBAAsB,UAC3BA,KAAK,IAAK,KACVA,KAAK,IAAK,KACVA,KAAK,aAAa,SAAAf,GAAC,0BAAiBE,EAAUiB,SAASnB,GAApC,QACnBoB,MAAM,OAAQ,SACdA,MAAM,YAAa,IACnB3D,MAAK,SAAAuC,GACJ,GAAGA,EAAEzB,MAAQ,EACb,OAAOyB,EAAEL,KAAKlC,QAIJmD,EACXE,OAAO,QACPE,MAAMT,EAAcU,OAAO,UAG3BF,KAAK,cAAe,UACpBA,KAAK,qBAAsB,UAC3BA,KAAK,IAAK,KACVA,KAAK,IAAK,MACVA,KAAK,aAAa,SAAAf,GAAC,0BAAiBE,EAAUiB,SAASnB,GAApC,QACnBoB,MAAM,OAAQ,SACdA,MAAM,YAAa,IACnB3D,MAAK,SAAAuC,GACJ,GAAGA,EAAEzB,MAAQ,EACb,OAAmB,IAAVyB,EAAEzB,MAAeqD,KAAKC,IAAI5C,IAAQI,QAAQ,GAAK,UAI9D,CAACK,EAAMC,OAIP,qBAAK0B,MAAO3B,EAAM2B,MAAOC,OAAQ5B,EAAM4B,OAAvC,SACE,mBACE1B,IAAKA,EACL2B,UAAS,oBAAe7B,EAAMU,YAArB,YAAoCV,EAAMU,YAA1C,UCvFJ0B,EAAS,WAAO,IACpB1E,EAAgByB,qBAAWd,GAA3BX,aADmB,EAGFqE,mBAASrE,GAHP,mBAGnBuC,EAHmB,UAQ1B,OACE,cAAC,EAAD,CACEA,KAAMA,EACN0B,MAAO,IACPC,OAAQ,IACRnB,YAAa,IACbC,YAAa,O,QCXN2B,EAAiB,WAAO,IAC5B3E,EAAgByB,qBAAWd,GAA3BX,aAD2B,EAERqE,oBAAS,GAFD,mBAE3BO,EAF2B,KAEpBC,EAFoB,OAGNR,oBAAS,GAHH,mBAG3BS,EAH2B,KAGnBC,EAHmB,KAK5BvD,EAAUxB,EAAa0B,KAAI,SAAAJ,GAAW,OAAIA,EAAYhB,UAEtD0E,EAASxD,EACZvB,QAAO,SAAA+B,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAIC,GAAL,OAAeD,EAAOC,IAAM,GACnCC,QAAQ,GAGLgD,IACwE,EAA5EzD,EAAQvB,QAAO,SAAA+B,GAAI,OAAIA,EAAO,KAAIF,QAAO,SAACC,EAAIC,GAAL,OAAeD,EAAOC,IAAO,IACpEC,QAAQ,GAEZ,OACE,mCACA,sBAAKrC,UAAU,oFAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wCACA,mBAAGA,UAAU,8CAAb,SACE,cAAC,IAAD,CAAcuB,MAAO6D,EAAQ9C,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,QAErF,8BACE,yBACExC,UAAU,8BACVsF,QAAS,kBAAML,GAAS,IAF1B,UAIE,sBAAMjF,UAAU,2CAAhB,wBACA,sBAAMA,UAAU,8BAAhB,SAA8C,cAAC,IAAD,WAIjDgF,EACD,qBAAKhF,UAAU,qEAAf,SACE,sBAAKA,UAAU,2JAAf,UACE,cAAC,EAAD,IACA,wBACEA,UAAU,qFACVsF,QAAS,kBAAML,GAAS,IAF1B,oBAOF,QAGJ,sBAAKjF,UAAU,qBAAf,UACE,yCACA,mBAAGA,UAAU,4CAAb,SACE,cAAC,IAAD,CAAcuB,MAAO8D,EAAS/C,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,QAEtF,8BACE,yBACExC,UAAU,8BACVsF,QAAS,kBAAMH,GAAU,IAF3B,UAIE,sBAAMnF,UAAU,2CAAhB,wBACA,sBAAMA,UAAU,8BAAhB,SAA8C,cAAC,IAAD,WAIjDkF,EACD,qBAAKlF,UAAU,qEAAf,SACE,sBAAKA,UAAU,+IAAf,UACE,cAAC,EAAD,IACA,wBACEA,UAAU,qFACVsF,QAAS,kBAAMH,GAAU,IAF3B,oBAOF,cC9EGI,EAAc,SAAC,GAAmB,IAAlB7D,EAAiB,EAAjBA,YACpBF,EAAqBK,qBAAWd,GAAhCS,kBACDgE,EAAO9D,EAAYhB,OAAS,EAAI,IAAM,IAE5C,OACE,qBAAIV,UAAW0B,EAAYhB,OAAS,EAAI,8EAAgF,gFAAxH,UACGgB,EAAYjB,KACb,uBAAMT,UAAU,cAAhB,UACGwF,EACD,cAAC,IAAD,CAAcjE,MAAOqD,KAAKC,IAAInD,EAAYhB,QAAS4B,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,SAG3G,wBACExC,UAAU,sIACVsF,QAAS,kBAAM9D,EAAkBE,EAAYpB,KAF/C,mBCZOmF,EAAkB,WAAM,IAG5BrF,EAAgByB,qBAAWd,GAA3BX,aAIP,OACE,qCACE,oBAAIJ,UAAU,0CAAd,qBACA,oBAAIA,UAAU,GAAd,SACGI,EAAa0B,KAAI,SAAAJ,GAAW,OAC3B,cAAC,EAAD,CAEEA,YAAaA,GADRA,EAAYpB,aCbhBoF,EAAiB,WAAO,IAAD,EACVjB,mBAAS,IADC,mBAC3BhE,EAD2B,KACrBkF,EADqB,OAENlB,mBAAS,GAFH,mBAE3B/D,EAF2B,KAEnBkF,EAFmB,OAGRnB,oBAAS,GAHD,mBAG3BO,EAH2B,KAGpBC,EAHoB,KAK3BxD,EAAkBI,qBAAWd,GAA7BU,eAsBP,OACE,qCACE,oBAAIzB,UAAU,0CAAd,iCACA,uBAAM6F,SAvBO,SAAAC,GAGf,GAFAA,EAAEC,iBAECtF,EAAKuF,OAAS,GAAKtF,EAAOsF,OAAS,EAAI,CACxC,IAAMC,EAAiB,CAErB3F,GAAIsE,KAAKsB,MAAoB,IAAdtB,KAAKuB,UACpB1F,KAAKA,EACLC,QAASA,GAGXe,EAAewE,GACfN,EAAQ,IACRC,EAAU,SAGVX,GAAS,IAOT,UACE,sBAAKjF,UAAU,eAAf,UACE,uBAAOoG,QAAQ,OAAOpG,UAAU,QAAhC,kBACA,uBACEG,KAAK,OACLoB,MAAOd,EACPT,UAAU,kGACVqG,SAAU,SAACP,GAAD,OAAOH,EAAQG,EAAEQ,OAAO/E,QAClCgF,YAAY,qBAGhB,sBAAKvG,UAAU,eAAf,UACE,wBAAOoG,QAAQ,SAASpG,UAAU,aAAlC,oBACS,sBAAMA,UAAU,UAAhB,wDAET,cAAC,IAAD,CACEuB,MAAOb,EACP4B,YAAa,QACbC,mBAAmB,EACnBvC,UAAU,kGACVqG,SAAU,SAACP,GACTF,EAAUE,EAAEQ,OAAO/E,MAAMiF,QAAQ,IAAI,MAEvCD,YAAY,kBACZE,QAAU,WACRb,EAAU,UAIhB,wBAAQ5F,UAAU,yKAAlB,gCAIDgF,EACC,sBAAKhF,UAAU,uIAAf,UACE,6DACA,wBACEA,UAAU,mFACVsF,QAAS,kBAAML,GAAS,IAF1B,kBAMA,S,OCpDKyB,MAdf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAK1G,UAAU,mBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCNO2G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b396621.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2 className=\"uppercase text-3xl text-center font-semibold text-black\">\r\n      Expense Tracker\r\n    </h2>\r\n  )\r\n}","export default (state, action) => {\r\n  switch(action.type) {\r\n    //GlobalState에 정의해놓음.\r\n    //action.type이 DELETE_TRANSACTION 인걸 찾음\r\n    //id 받아온값은 삭제하려는거니까 그id와 일치하지 않는 것들 전부 리턴\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions:state.transactions.filter(transactions => transactions.id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n    return {\r\n      ...state,\r\n      transactions:[action.payload, ...state.transactions]\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\n//How we specify the application state changes in response to certain actions to our store to our context ","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer'\r\n\r\n//initial state\r\nconst initialState = {\r\n  transactions: [\r\n    {id:1, text:'Flower', amount:-100},\r\n    {id:2, text:'Salary', amount:2200},\r\n    {id:3, text:'Books', amount:-150},\r\n    {id:4, text:'Stocks', amount:80},\r\n    {id:5, text:'Snacks', amount:-200},\r\n    {id:6, text:'Cloth', amount:-500},\r\n  ]\r\n}\r\n\r\nlocalStorage.setItem(\"initialState\", JSON.stringify(initialState));\r\n\r\n//Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n\r\n//Provider component 20:10\r\nexport const GlobalProvider = ({children}) => {\r\n  //children 은 app.js 에서 <GlobalProvider> 이 태그 안에 들어간것들을 말함\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n  //AppReducer 내용이 useReducer에 pass되고 state에 access함 (initialState)\r\n  //그리고 value를 provider 에 패스해줌\r\n  //provider 는 <GlobalProvider> 이 태그 안에 들어간것들을 말함\r\n\r\n  //Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type:'DELETE_TRANSACTION',\r\n      payload:id\r\n    });\r\n  }\r\n  //AppReducer 로 이 값 넘겨줌 //payload에 id넘겨줄수도 있고 밑에처럼 object 전체 넘겨줄수도 있음\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type:'ADD_TRANSACTION',\r\n      payload:transaction\r\n    });\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions:state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport const Balance = () => {\r\n  const {transactions} = useContext(GlobalContext);\r\n  \r\n  const amounts = transactions.map(transactions => transactions.amount);\r\n  console.log('amounts', amounts)\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  //reduce 로 amount array안에 있는 값 다 더해줌\r\n\r\n  return (\r\n    <div className=\"mt-10\">\r\n      <div className=\"items-center\">\r\n        <div>\r\n          <h1 className=\"leading-6 text-lg text-black\">\r\n            Your Balance\r\n          </h1>\r\n        </div>\r\n        <div>\r\n          <h2 className=\"text-4xl font-semibold\">\r\n            <NumberFormat value={total} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst PieChart = props => {\r\n  const amounts = props.data.filter(transactions => transactions.amount > 0).map(item => item.amount);\r\n  let total = amounts.reduce((acc, item) => (acc += item), 0);\r\n\r\n  const ref = useRef(null);\r\n  const createPie = d3\r\n    .pie()\r\n    .value(d => {\r\n      if(d.amount > 0){\r\n      return d.amount\r\n      }\r\n    })\r\n    .sort(null);\r\n  const createArc = d3\r\n    .arc()\r\n    .innerRadius(props.innerRadius)\r\n    .outerRadius(props.outerRadius);\r\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\r\n  // const format = d3.format(\".2f\");\r\n\r\n  useEffect(\r\n    () => {\r\n      const data = createPie(props.data);\r\n      const group = d3.select(ref.current);\r\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\r\n\r\n      groupWithData.exit().remove();\r\n\r\n      const groupWithUpdate = groupWithData\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"arc\");\r\n\r\n      const path = groupWithUpdate\r\n        .append(\"path\")\r\n        .merge(groupWithData.select(\"path.arc\"));\r\n\r\n      path\r\n        .attr(\"class\", \"arc\")\r\n        .attr(\"d\", createArc)\r\n        .attr(\"fill\", (d, i) => colors(i));\r\n\r\n      const text = groupWithUpdate\r\n        .append(\"text\")\r\n        .merge(groupWithData.select(\"text\"));\r\n\r\n      text\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"alignment-baseline\", \"middle\")\r\n        .attr(\"x\", \"0\")\r\n        .attr(\"y\", \"0\")\r\n        .attr(\"transform\", d => `translate(${createArc.centroid(d)})`)\r\n        .style(\"fill\", \"black\")\r\n        .style(\"font-size\", 10)\r\n        .text(d => {\r\n          if(d.value > 0){\r\n          return d.data.text\r\n          }\r\n        })\r\n\r\n      const text2 = groupWithUpdate\r\n        .append(\"text\")\r\n        .merge(groupWithData.select(\"text2\"));\r\n\r\n      text2\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"alignment-baseline\", \"middle\")\r\n        .attr(\"x\", \"0\")\r\n        .attr(\"y\", \"10\")\r\n        .attr(\"transform\", d => `translate(${createArc.centroid(d)})`)\r\n        .style(\"fill\", \"black\")\r\n        .style(\"font-size\", 10)\r\n        .text(d => {\r\n          if(d.value > 0){\r\n            return ((d.value * 100) / total).toFixed(2) + ' %'\r\n          }\r\n        })\r\n    },\r\n    [props.data]\r\n  );\r\n\r\n  return (\r\n    <svg width={props.width} height={props.height}>\r\n      <g\r\n        ref={ref}\r\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PieChart;","import React, {useContext, useState } from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport IncomeChart from \"./IncomeChart\";\r\n\r\nexport const ChartI = () => {\r\n  const {transactions} = useContext(GlobalContext);\r\n\r\n  const [data, setData] = useState(transactions);\r\n  const changeData = () => {\r\n    setData(transactions);\r\n  };\r\n\r\n  return (\r\n    <IncomeChart\r\n      data={data}\r\n      width={300}\r\n      height={300}\r\n      innerRadius={110}\r\n      outerRadius={150}\r\n    />\r\n  )\r\n}","import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nconst ExpenseChart = props => {\r\n  const amounts = props.data.filter(transactions => transactions.amount < 0).map(item => item.amount);\r\n  let total = amounts.reduce((acc, item) => (acc += item), 0);\r\n  //get only negative numbers (expense) from the array\r\n\r\n  const ref = useRef(null);\r\n  const createPie = d3\r\n  .pie()\r\n  .value(d => {\r\n    if(d.amount < 0){\r\n      return Math.abs(d.amount)\r\n      //converted to positive number\r\n      }\r\n    })\r\n    .sort(null);\r\n  const createArc = d3\r\n    .arc()\r\n    .innerRadius(props.innerRadius)\r\n    .outerRadius(props.outerRadius);\r\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\r\n  // const format = d3.format(\".2f\");\r\n\r\n  useEffect(\r\n    () => {\r\n      const data = createPie(props.data);\r\n      const group = d3.select(ref.current);\r\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\r\n\r\n      groupWithData.exit().remove();\r\n\r\n      const groupWithUpdate = groupWithData\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"arc\");\r\n\r\n      const path = groupWithUpdate\r\n        .append(\"path\")\r\n        .merge(groupWithData.select(\"path.arc\"));\r\n\r\n      path\r\n        .attr(\"class\", \"arc\")\r\n        .attr(\"d\", createArc)\r\n        .attr(\"fill\", (d, i) => colors(i));\r\n\r\n      const text = groupWithUpdate\r\n        .append(\"text\")\r\n        .merge(groupWithData.select(\"text\"));\r\n\r\n      text\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"alignment-baseline\", \"middle\")\r\n        .attr(\"x\", \"0\")\r\n        .attr(\"y\", \"0\")\r\n        .attr(\"transform\", d => `translate(${createArc.centroid(d)})`)\r\n        .style(\"fill\", \"black\")\r\n        .style(\"font-size\", 10)\r\n        .text(d => {\r\n          if(d.value > 0){\r\n          return d.data.text\r\n          }\r\n        })\r\n\r\n      const text2 = groupWithUpdate\r\n        .append(\"text\")\r\n        .merge(groupWithData.select(\"text2\"));\r\n\r\n      text2\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"alignment-baseline\", \"middle\")\r\n        .attr(\"x\", \"0\")\r\n        .attr(\"y\", \"10\")\r\n        .attr(\"transform\", d => `translate(${createArc.centroid(d)})`)\r\n        .style(\"fill\", \"black\")\r\n        .style(\"font-size\", 10)\r\n        .text(d => {\r\n          if(d.value > 0){\r\n          return ((d.value * 100) / Math.abs(total)).toFixed(2) + ' %'\r\n          }\r\n        })\r\n    },\r\n    [props.data]\r\n  );\r\n\r\n  return (\r\n    <svg width={props.width} height={props.height}>\r\n      <g\r\n        ref={ref}\r\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ExpenseChart;","import React, {useContext, useState } from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nexport const ChartE = () => {\r\n  const {transactions} = useContext(GlobalContext);\r\n\r\n  const [data, setData] = useState(transactions);\r\n  const changeData = () => {\r\n    setData(transactions);\r\n  };\r\n\r\n  return (\r\n    <ExpenseChart\r\n      data={data}\r\n      width={300}\r\n      height={300}\r\n      innerRadius={110}\r\n      outerRadius={150}\r\n    />\r\n  )\r\n}","import React, {useContext, useState} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport NumberFormat from 'react-number-format';\r\nimport {ChartI} from './ChartI'\r\nimport {ChartE} from './ChartE'\r\nimport { FcBarChart } from 'react-icons/fc';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const {transactions} = useContext(GlobalContext)\r\n  const [modal, setModal] = useState(false)\r\n  const [modal2, setModal2] = useState(false)\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount)\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc,item) => (acc += item),0)\r\n    .toFixed(2);\r\n  //income은 transaction 에서 0보다 큰 숫자들을 filter 로 추려서 reduce 로 다 더해줌\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0 ).reduce((acc,item) => (acc += item), 0) * -1\r\n    ).toFixed(2)\r\n\r\n  return (\r\n    <>\r\n    <div className=\"bg-white shadow-lg group block rounded-lg p-4 border flex flex-row divide-x mt-12\">\r\n      <div className=\"w-6/12 text-center\">\r\n        <h4>Income</h4>\r\n        <p className=\"text-customgreen-900 text-2xl font-semibold\">\r\n          <NumberFormat value={income} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n        </p>\r\n        <div>\r\n          <button\r\n            className=\"relative focus:outline-none\"\r\n            onClick={() => setModal(true)}\r\n          >\r\n            <span className=\"inline-block text-sm text-customtext-900\">View Chart</span>\r\n            <span className=\"inline-block absolute top-1\"><FcBarChart /></span>\r\n          </button>\r\n        </div>\r\n\r\n        {modal ?\r\n        <div className=\"absolute w-full h-full bg-gray-900 bg-opacity-20 z-50 top-0 left-0\">\r\n          <div className=\"absolute z-60 top-2/4 left-2/4 transform -translate-x-1/2 -translate-y-1/2 bg-gray-100 rounded shadow-lg p-8 text-center flex justify-center opacity-100\">\r\n            <ChartI />\r\n            <button \r\n              className=\"absolute top-2 right-4 z-10 cursor-pointer focus:outline-none outline-none text-xl\"\r\n              onClick={() => setModal(false)}\r\n              >x\r\n            </button>\r\n          </div>\r\n        </div>\r\n        : null\r\n        }\r\n      </div>\r\n      <div className=\"w-6/12 text-center\">\r\n        <h4>Expense</h4>\r\n        <p className=\"text-customred-900 text-2xl font-semibold\">\r\n          <NumberFormat value={expense} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n        </p>\r\n        <div>\r\n          <button\r\n            className=\"relative focus:outline-none\"\r\n            onClick={() => setModal2(true)}\r\n          >\r\n            <span className=\"inline-block text-sm text-customtext-900\">View Chart</span>\r\n            <span className=\"inline-block absolute top-1\"><FcBarChart /></span>\r\n          </button>\r\n        </div>\r\n\r\n        {modal2 ?\r\n        <div className=\"absolute w-full h-full bg-gray-900 bg-opacity-20 z-50 top-0 left-0\">\r\n          <div className=\"absolute z-10 top-2/4 left-2/4 transform -translate-x-1/2 -translate-y-1/2 bg-gray-100 rounded shadow-lg p-8 text-center flex justify-center\">\r\n            <ChartE />\r\n            <button \r\n              className=\"absolute top-2 right-4 z-10 cursor-pointer focus:outline-none outline-none text-xl\"\r\n              onClick={() => setModal2(false)}\r\n              >x\r\n            </button>\r\n          </div>\r\n        </div>\r\n        : null\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    \r\n  </>\r\n  )\r\n}","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n  const {deleteTransaction} = useContext(GlobalContext)\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'position: relative shadow border-r-4 border-customred-900 p-3 mb-3 bg-white' : 'position: relative shadow border-r-4 border-customgreen-900 p-3 mb-3 bg-white'}>\r\n      {transaction.text} \r\n      <span className=\"float-right\">\r\n        {sign}\r\n        <NumberFormat value={Math.abs(transaction.amount)} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n      </span>\r\n      {/* Math.abs : 숫자 positive number 로 바꿔줌*/}\r\n      <button \r\n        className=\"position: absolute top-2/4 left-0 transform -translate-x-full -translate-y-1/2 bg-gray-300 hover:bg-red-600 text-white text-lg px-2\"\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n      >x</button>\r\n    </li>\r\n  )\r\n}","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n  // const context = useContext(GlobalContext);\r\n  // console.log(context);\r\n  const {transactions} = useContext(GlobalContext);\r\n  //GlobalState.js 에서 만든 initialState 가져오는것임\r\n  //context는 initialState를 통채로 가져오니까 그 안의 {transactions} 라는 array가져옴\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"leading-6 text-lg text-black mt-12 mb-4\">History</h3>\r\n      <ul className=\"\">\r\n        {transactions.map(transaction => (\r\n          <Transaction \r\n            key={transaction.id}\r\n            transaction={transaction}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import React, {useState, useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('')\r\n  const [amount, setAmount] = useState(0)\r\n  const [modal, setModal] = useState(false)\r\n\r\n  const {addTransaction} = useContext(GlobalContext)\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if(text.length > 0 && amount.length > 0 ) {\r\n      const newTransaction = {\r\n        //random id 만들기\r\n        id: Math.floor(Math.random()*100000000),\r\n        text:text,\r\n        amount: +amount \r\n        // +amount : string을 number로 바꿔줌\r\n      }\r\n      addTransaction(newTransaction)\r\n      setText('')\r\n      setAmount('')\r\n      //addTransaction 를 call 하고 newTransaction를 pass해줌\r\n    } else {\r\n      setModal(true)\r\n    }\r\n}\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"leading-6 text-lg text-black mt-12 mb-4\">Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor='text' className=\"block\">Text</label>\r\n          <input \r\n            type=\"text\" \r\n            value={text} \r\n            className=\"w-full p-2 placeholder-gray-400 border border-gray-200 focus:border-gray-900 focus:outline-none\"\r\n            onChange={(e) => setText(e.target.value)} \r\n            placeholder=\"Enter text...\" \r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor='amount' className=\"block mt-5\">\r\n            Amount <span className=\"text-sm\">(negative : expense, positive : income)</span>\r\n          </label>\r\n          <NumberFormat \r\n            value={amount} \r\n            displayType={'input'} \r\n            thousandSeparator={true}\r\n            className=\"w-full p-2 placeholder-gray-400 border border-gray-200 focus:border-gray-900 focus:outline-none\"\r\n            onChange={(e) => {\r\n              setAmount(e.target.value.replace(/,/,''))\r\n            }}\r\n            placeholder=\"Enter amount...\" \r\n            onFocus={ () => {\r\n              setAmount('')\r\n            }}\r\n          />\r\n        </div>\r\n        <button className=\"w-full mt-5 bg-gradient-to-r from-yellow-400 via-red-500 to-pink-500 py-2 text-white hover:bg-gradient-to-l hover:from-pink-500 hover:to-yellow-400 focus:outline-none\">\r\n          Add transaction\r\n        </button>\r\n      </form>\r\n      {modal ?\r\n        <div className=\"position: absolute top-2/4 left-2/4 transform -translate-x-1/2 -translate-y-1/2 bg-gray-200 w-6/12 rounded shadow-lg p-8 text-center\">\r\n          <div>Please enter a valid value</div>\r\n          <button \r\n            className=\"position: absolute top-2 right-4 z-10 cursor-pointer text-2xl focus:outline-none\"\r\n            onClick={() => setModal(false)}\r\n          >x\r\n          </button>\r\n        </div>\r\n        : null\r\n        }\r\n    </>\r\n  )\r\n}","import React from 'react';\nimport {Header} from './components/Header'\nimport {Balance} from './components/Balance'\nimport {IncomeExpenses} from './components/IncomeExpenses'\nimport {TransactionList} from './components/TransactionList'\nimport {AddTransaction} from './components/AddTransaction'\n\nimport {GlobalProvider} from './context/GlobalState'\nimport './App.css'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"grid grid-cols-1\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n\n//https://www.youtube.com/watch?v=XuFDcZABiDQ&list=PLillGF-RfqbY3c2r0htQyVbDJJoBFE6Rb\n\n//d3\n//https://medium.com/stationfive/how-to-create-a-pie-chart-with-d3-js-and-react-hooks-part-1-81bcd7f39b32\n\n//https://www.youtube.com/watch?v=lnXf1mpFGb8&t=127s","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}